#summary Getting Started with the FLSAM Package

The FLSAM package is an FLR-based wrapper to SAM, the state-space assessment model.

== Installation ==

FLSAM should be considered as a method under-development - whilst it is relatively stable and approaching the point where it is suitable for routine use, bugs, rough edges and lacking documentation are to be expected. If you find a bug, or think that something could be done better, please contact us and let us know!

The easiest way to install FLSAM is directly from the R command-line:
{{{
install.packages("FLSAM",repos="http://flr-project.org/Rdevel")
}}}
Alternatively, if this doesn't work for you, a copy of the latest major release, precompiled for windows and linux, can be found in the repository in the directory {{{_Common/Pkgs/FLSAM_releases}}}.

== Setting up the assessment data objects ==
The following assumes some degree of familarity with the concepts and basics of both R and FLR. If you're not familar with FLR, have a look at the [http://tyflr.flr-project.org/ Teach Yourself FLR] tutorials on the [http://flr-project.org/ FLR homepage]. Browsing the assessment code found on this repository is also a good place to start - in particular, see the North Sea herring assessment (NSAS directory).

Firstly, load the FLCore package
{{{
  library(FLCore)
}}}

The first step in performing an assessment to obviously to get some data to work on! There are two types of objects that you need to create.
  * an FLStock object, which stores all of the data relating to the stock (e.g. natural mortality, catches, weights etc).
  * an FLIndices object, which contains all of the information relating to the tuning indices.

The easiest way to create these objects is to read the input data directly from a set of Lowestoft VPA files using the build in FLR functionality. As an example,
{{{
 stck <- readFLStock(file.path(".","data","index.txt"),no.discards=TRUE)
}}}
will create an FLStock object called "stck" from the Lowestoft VPA files stored in ./data/ (with discards set to zero). Similarly,
{{{
 tun <- readFLIndices(file.path(".","data","fleet.txt"))
}}}
will create an FLIndices object from the same location. For more information, see the appropriate help files by issuing the commands {{{?readFLstock}}} and {{{?readFLIndices}}}. You can view a summary of the objects that you have created using the {{{summary()}}} command:
{{{
  summary(stck)
  summary(tun)
}}}

Alternatively, you can also use the sample objects stored in the FLSAM package.
{{{
  library(FLSAM)
  data(NSH)
  stck <- NSH
  tun  <- NSH.tun
}}}
This loads two objects called NSH and NSH.tun containing the stock and tuning indices respectively for the North Sea herring stock, and then copies them into new objects called "stck" and "tun" (just for consistency with everything else).

== Configuring the FLSAM assessment ==
The next step is to set the various options for the FLSAM configuration. These are controlled through an object of type "FLSAM.control". Generally the structure of this object is complex, and highly specific to the assessment at hand. We can, however, use the automatic configuration built into FLSAM to get us started - this builds up an FLSAM.control template based on the FLStock and FLIndices objects suppplied. It works as follows:
{{{
  ctrl <- FLSAM.control(stck,tun)
}}}
The resulting FLSAM.control object, "ctrl", contains a structure that can be used to configure the assessment - in the default mode, however, all parameters are "unset". 

Alternatively, you can load a preprepared FLSAM.control object for the NSH assessment directly from the FLSAM package:
{{{
  data(NSH.sam)
  ctrl <- NSH.ctrl
}}}

Configuration options can be set by the user by directly accessing and modifying the contents of FLSAM.control object e.g {{{
  ctrl@catchabilities["HERAS","9"] <- 12
}}}

The details of this configuration are not convered here but can be found in <TODO: Document configuration settings>. 