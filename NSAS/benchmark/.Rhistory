NSH@catch.wt                  <- NSH@landings.wt #Automatic population of catch.wt introduces NAs
NSH@catch.wt["9",hist.yrs]    <- 0.271
NSH@landings.wt["9",hist.yrs] <- 0.271
NSH@catch.n["9",hist.yrs]     <- NSH@catch.n["8",hist.yrs]/2
NSH@catch.n["8",hist.yrs]     <- NSH@catch.n["9",hist.yrs]
NSH@landings.n["9",hist.yrs]  <- NSH@landings.n["8",hist.yrs]/2
NSH@landings.n["8",hist.yrs]  <- NSH@landings.n["9",hist.yrs]
NSH@stock.wt["9",hist.yrs]    <- 0.312
NSH@m["9",hist.yrs]           <- 0.1
NSH@mat["9",hist.yrs]         <- 1
#No catches of age 9 in 1977 so stock.wt does not get filled there.
#Hence, we copy the stock weight for that age from the previous year.
#Note that because we use a fixed stock.wt prior to 1983, there is no
#need to use averaging or anything fancier
NSH@stock.wt["9","1977"]              <- NSH@stock.wt["9","1976"]
#Use a running mean(y-2,y-1,y) of input wests (i.e. west_raw) to calculate west
NSH@stock.wt[,3:dim(NSH@stock.wt)[2]] <- (NSH@stock.wt[,3:(dim(NSH@stock.wt)[2]-0)] +
NSH@stock.wt[,2:(dim(NSH@stock.wt)[2]-1)] +
NSH@stock.wt[,1:(dim(NSH@stock.wt)[2]-2)]) / 3
### ============================================================================
### previous update: read in the values of Fprop from csv file
### ============================================================================
fprop <- read.csv(file.path(data.source, "propFraw.csv"))
names(fprop) <- gsub("X","",names(fprop))
names(fprop)[1] <- "month"
yrs<-names(fprop)[-1]
for (a in dimnames(NSH@harvest.spwn)$age)  NSH@harvest.spwn[a,yrs]  <-  unlist(fprop[35,-1])
# replace value for older year with the mean of the first years
yrsold <- an(dimnames(NSH@harvest.spwn)$year)
yrsold <- yrsold[!is.element(yrsold,yrs)]
NSH@harvest.spwn[,ac(yrsold)] <- yearMeans(NSH@harvest.spwn[,yrs[1:5]])
### ============================================================================
### Prepare Natural Mortality estimates
### ============================================================================
#Read in estimates from external file
#M2            <- read.csv(file.path(".","data","Smoothed_span50_M_NotExtrapolated_NSAS2016_scaled_profile.csv"),header=TRUE)
M2            <- read.csv(file.path(".","data","Smoothed_span50_M_NotExtrapolated_NSAS.csv"),header=TRUE)
#                    header=TRUE)
#M2            <- read.csv(file.path(".","data","Smoothed_span50_M_NotExtrapolated_NSAS_2010.csv"),
M2[,2:41] <- M2[,2:41] + 0.05
colnames(M2)  <- sub("X","",colnames(M2))
rownames(M2)  <- M2[,1]
M2            <- M2[,-1]# Trim off first column as it contains 'ages'
M2            <- M2[,apply(M2,2,function(x){all(is.na(x))==F})] # keep only years with data
#Extract key data from default assessment
NSHM2           <- NSH
NSHM2@m[]       <- NA
yrs             <- dimnames(NSHM2@m)$year
yrs             <- yrs[which(yrs %in% colnames(M2))]
NSHM2@m[,yrs][] <- as.matrix(M2)
#- Apply 5 year running average
extryrs         <- dimnames(NSHM2@m)$year[which(!dimnames(NSHM2@m)$year %in% yrs)]
extryrsfw       <- extryrs[which(extryrs > max(an(yrs)))]
extryrsbw       <- extryrs[which(extryrs <= max(an(yrs)))]
ages            <- dimnames(NSHM2@m)$age
extrags         <- names(which(apply(M2,1,function(x){all(is.na(x))==T})==T))
yrAver          <- 5
for(iYr in as.numeric(rev(extryrs))){
for(iAge in ages[!ages%in%extrags]){
if(iYr %in% extryrsbw) NSHM2@m[ac(iAge),ac(iYr)] <-
yearMeans(NSHM2@m[ac(iAge),ac((iYr+1):(iYr+yrAver)),],na.rm=T)
if(iYr %in% extryrsfw) NSHM2@m[ac(iAge),ac(iYr)] <-
yearMeans(NSHM2@m[ac(iAge),ac((iYr-1):(iYr-yrAver)),],na.rm=T)
}
}
for(iAge in extrags)
NSHM2@m[ac(iAge),]          <- NSHM2@m[ac(as.numeric(min(sort(extrags)))-1),]
#Write new M values into the original stock object
NSH@m     <- NSHM2@m
### ============================================================================
### Prepare index object for assessment
### ============================================================================
#Load and modify all numbers at age data
NSH.tun   <- readFLIndices(file.path(data.source,"fleet.txt"))
NSH.tun   <- lapply(NSH.tun,function(x) {x@type <- "number"; return(x)})
NSH.tun[["IBTS0"]]@range["plusgroup"] <- NA
#- Trim the survey index of IBTS to age 1 only
NSH.tun[["IBTS-Q1"]] <- trim(NSH.tun[["IBTS-Q1"]],age=dims(NSH.tun[["IBTS-Q1"]]@index)$min)
#Load additional indices derived from IHLS (SCAI, MLAI)
#Note that there is a bug in readFLIndex which means that we have to
#take such a round-about approach of loading everything, then dropping
#the first set of indices. Hopefully will be patched in a future release
#MPA 20140306: We have deprecated the MLAI but continue to store its values in
#              data/mlai.txt. However, it is now stored in the native format
#              output from the code, so this line, which assumes VPA formatt,
#               doesn't work anymore. Will need to add custom reading functionality
#MLAI.idx <-  readFLIndices(file.path(data.source,"fleet.txt"),
#                   file.path(data.source,"mlai.txt"),type="ICA")[-seq(NSH.tun)]
SCAI.idx <-  readFLIndices(file.path(data.source,"fleet.txt"),
file.path(data.source,"scai.txt"),type="ICA")[-seq(NSH.tun)]
SCAI.idx[[1]]@catch.n <- SCAI.idx[[1]]@index
SCAI.idx[[1]]@range[6:7] <- 0:1
name(SCAI.idx[[1]]) <- "SCAI"
SCAI <- FLIndex(index=FLQuant(c(SCAI.idx[[1]]@index),dimnames=list(age=-1,year=SCAI.idx[[1]]@range["minyear"]:SCAI.idx[[1]]@range["maxyear"],unit="unique",season="all",area="unique",iter=1)))
SCAI@catch.n <- SCAI@index
SCAI@range[6:7] <- 0:1
name(SCAI) <- "SCAI"
NSH.tun <- FLIndices(NSH.tun[[1]],NSH.tun[[2]],NSH.tun[[3]],SCAI)
type(NSH.tun[["SCAI"]]) <- "biomass"
### ============================================================================
### Apply plusgroup to all data sets
### ============================================================================
pg <- 8
#- This function already changes the stock and landings.wts correctly
NSH <- setPlusGroup(NSH,pg)
NSH.tun[["HERAS"]]@index[ac(pg),]     <- quantSums(NSH.tun[["HERAS"]]@index[ac(pg:dims(NSH.tun[["HERAS"]]@index)$max),])
NSH.tun[["HERAS"]]                    <- trim(NSH.tun[["HERAS"]],age=dims(NSH.tun[["HERAS"]]@index)$min:pg)
NSH.tun[["HERAS"]]@range["plusgroup"] <- pg
### ============================================================================
### Closure data deletion
### ============================================================================
#We don't believe the closure catch data, so put it to NA
NSH@catch.n[,ac(1978:1979)]           <- NA
################################################################################
# NSH_SAM Assessment
#
# $Rev: 697 $
# $Date: 2012-02-10 09:52:28 +0100 (vr, 10 feb 2012) $
#
# Author: HAWG model devlopment group
#
# Performs the "Final" assessment for NSAS assessment
#
# Developed with:
#   - R version 2.13.0
#   - FLCore 2.4
#
# To be done:
#
# Notes: Have fun running this assessment!
#
################################################################################
install <- FALSE
if(install){
install.packages(pkgs="FLCore",repos="http://flr-project.org/R")
devtools::install_github("fishfollower/SAM/stockassessment", ref="components")
devtools::install_github("flr/FLSAM", ref="develop_V2")
}
### ============================================================================
### ============================================================================
### ============================================================================
### Setup
### ============================================================================
### ============================================================================
### ============================================================================
rm(list=ls()); graphics.off(); start.time <- proc.time()[3]
options(stringsAsFactors=FALSE)
log.msg     <-  function(string) {cat(string);}
log.msg("\nNSH Final Assessment\n=====================\n")
# local path
#path <- "C:/Users/brune001/my git files/wg_HAWG/NSAS/benchmark/"
path <- "D:/git/wg_HAWG/NSAS/benchmark/"
try(setwd(path),silent=TRUE)
### ======================================================================================================
### Define parameters and paths for use in the assessment code
### ======================================================================================================
output.dir          <-  file.path(".","results/2e_oldM_scaled/")                #figures directory
output.base         <-  file.path(output.dir,"NSH Assessment")  #Output base filename, including directory. Other output filenames are built by appending onto this one
n.retro.years       <-  10                                      #Number of years for which to run the retrospective
#.libPaths("C:/software/Rpackages")
### ============================================================================
### imports
### ============================================================================
library(FLSAM); library(FLEDA); library(FLBRP)
source(file.path("R/2e_oldM_scaled/setupAssessmentObjects_oldM_scaled.r"))
source(file.path("R/2e_oldM_scaled/setupControlObject_oldM_scaled.r"))
path <- "D:/git/wg_HAWG/NSAS/"
try(setwd(path),silent=TRUE)
source(file.path("../_Common/HAWG_Common_module.r"))
path <- "D:/git/wg_HAWG/NSAS/benchmark/"
try(setwd(path),silent=TRUE)
NSH.sam <- FLSAM(NSH,NSH.tun,NSH.ctrl)
name(NSH.sam) <- "2e_oldM_scaled"
#Update stock object
NSH       <- NSH + NSH.sam
NSH@stock <- computeStock(NSH)
name(NSH) <- "2e_oldM_scaled"
# Save results
save(NSH,NSH.tun,NSH.ctrl,NSH.sam,file=file.path(output.dir,"NSH.RData",sep=""))
##
#  script to compare the output of the assessment using the new Fprop and the 2017 assessment
rm(list=ls()); graphics.off(); start.time <- proc.time()[3]
options(stringsAsFactors=FALSE)
# choose the assessments to be compared
assess1 <- "0_basecase"
assess2 <- "2_newM"
assess3 <- "2c_newM_scaled_profile"
assess4 <- "2e_oldM_scaled"
# local path
path <- "C:/Users/brune001/my git files/wg_HAWG/NSAS/benchmark/"
try(setwd(path),silent=TRUE)
### ======================================================================================================
### Define parameters and paths for use in the assessment code
### ======================================================================================================
output.dir          <-  file.path(".","results/")                #figures directory
output.base         <-  file.path(output.dir,"NSH Assessment")  #Output base filename, including directory. Other output filenames are built by appending onto this one
### ============================================================================
### imports
### ============================================================================
library(FLSAM); library(FLEDA)  ; library(ggplot2)
data_series <- "catch unique"
load(file.path(".","results",assess1,"NSH.RData")  )
fit1.stck  <-NSH
fit1.flsam <-NSH.sam
load(file.path(".","results",assess2,"NSH.RData")  )
fit2.stck  <-NSH
fit2.flsam <-NSH.sam
load(file.path(".","results",assess3,"NSH.RData")  )
fit3.stck  <-NSH
fit3.flsam <-NSH.sam
load(file.path(".","results",assess4,"NSH.RData")  )
fit1.stck  <-NSH
fit1.flsam <-NSH.sam
##
#  script to compare the output of the assessment using the new Fprop and the 2017 assessment
rm(list=ls()); graphics.off(); start.time <- proc.time()[3]
options(stringsAsFactors=FALSE)
# choose the assessments to be compared
assess1 <- "0_basecase"
assess2 <- "2_newM"
assess3 <- "2c_newM_scaled_profile"
assess4 <- "2e_oldM_scaled"
# local path
path <- "C:/Users/brune001/my git files/wg_HAWG/NSAS/benchmark/"
try(setwd(path),silent=TRUE)
### ======================================================================================================
### Define parameters and paths for use in the assessment code
### ======================================================================================================
output.dir          <-  file.path(".","results/")                #figures directory
output.base         <-  file.path(output.dir,"NSH Assessment")  #Output base filename, including directory. Other output filenames are built by appending onto this one
### ============================================================================
### imports
### ============================================================================
library(FLSAM); library(FLEDA)  ; library(ggplot2)
data_series <- "catch unique"
load(file.path(".","results",assess1,"NSH.RData")  )
fit1.stck  <-NSH
fit1.flsam <-NSH.sam
load(file.path(".","results",assess2,"NSH.RData")  )
fit2.stck  <-NSH
fit2.flsam <-NSH.sam
load(file.path(".","results",assess3,"NSH.RData")  )
fit3.stck  <-NSH
fit3.flsam <-NSH.sam
load(file.path(".","results",assess4,"NSH.RData")  )
fit1.stck  <-NSH
fit1.flsam <-NSH.sam
#plot(residuals_catch)
#logLik(fit1.flsam)
#logLik(fit2)
#1-pchisq(2*(logLik(fit2)-logLik(fit1)),6)
#AIC(fit1)
#AIC(fit2)
#pdf(file.path(output.dir,paste(name(NSH.sam),".pdf",sep="")))
#png(file.path(output.dir,paste(name(NSH.sam),"figures - %02d.png")),units = "px", height=800,width=672, bg = "white")
windows()
#compare stock trajectories
st.names <- c(assess1,assess2,assess3,assess4)
stc <- FLStocks(fit1.stck,fit2.stck, fit3.stck, fit4.stck)
names(stc) <- st.names
flsam <- FLSAMs(fit1.flsam,fit2.flsam, fit3.flsam, fit4.flsam)
names(flsam) <- st.names
plot(stc)
st.names <- c(assess1,assess2,assess3,assess4)
stc <- FLStocks(fit1.stck,fit2.stck, fit3.stck, fit4.stck)
##
#  script to compare the output of the assessment using the new Fprop and the 2017 assessment
rm(list=ls()); graphics.off(); start.time <- proc.time()[3]
options(stringsAsFactors=FALSE)
# choose the assessments to be compared
assess1 <- "0_basecase"
assess2 <- "2_newM"
assess3 <- "2c_newM_scaled_profile"
assess4 <- "2e_oldM_scaled"
# local path
path <- "C:/Users/brune001/my git files/wg_HAWG/NSAS/benchmark/"
try(setwd(path),silent=TRUE)
### ======================================================================================================
### Define parameters and paths for use in the assessment code
### ======================================================================================================
output.dir          <-  file.path(".","results/")                #figures directory
output.base         <-  file.path(output.dir,"NSH Assessment")  #Output base filename, including directory. Other output filenames are built by appending onto this one
### ============================================================================
### imports
### ============================================================================
library(FLSAM); library(FLEDA)  ; library(ggplot2)
data_series <- "catch unique"
load(file.path(".","results",assess1,"NSH.RData")  )
fit1.stck  <-NSH
fit1.flsam <-NSH.sam
load(file.path(".","results",assess2,"NSH.RData")  )
fit2.stck  <-NSH
fit2.flsam <-NSH.sam
load(file.path(".","results",assess3,"NSH.RData")  )
fit3.stck  <-NSH
fit3.flsam <-NSH.sam
load(file.path(".","results",assess4,"NSH.RData")  )
fit4.stck  <-NSH
fit4.flsam <-NSH.sam
windows()
#compare stock trajectories
st.names <- c(assess1,assess2,assess3,assess4)
stc <- FLStocks(fit1.stck,fit2.stck, fit3.stck, fit4.stck)
names(stc) <- st.names
flsam <- FLSAMs(fit1.flsam,fit2.flsam, fit3.flsam, fit4.flsam)
names(flsam) <- st.names
plot(stc)
##
#  script to compare the output of the assessment using the new Fprop and the 2017 assessment
rm(list=ls()); graphics.off(); start.time <- proc.time()[3]
options(stringsAsFactors=FALSE)
# choose the assessments to be compared
assess1 <- "0_basecase"
assess2 <- "2_newM"
assess3 <- "2c_newM_scaled_profile"
assess4 <- "2e_oldM_scaled"
# local path
path <- "C:/Users/brune001/my git files/wg_HAWG/NSAS/benchmark/"
try(setwd(path),silent=TRUE)
### ======================================================================================================
### Define parameters and paths for use in the assessment code
### ======================================================================================================
output.dir          <-  file.path(".","results/")                #figures directory
output.base         <-  file.path(output.dir,"NSH Assessment")  #Output base filename, including directory. Other output filenames are built by appending onto this one
### ============================================================================
### imports
### ============================================================================
library(FLSAM); library(FLEDA)  ; library(ggplot2)
data_series <- "catch unique"
load(file.path(".","results",assess1,"NSH.RData")  )
fit1.stck  <-NSH
fit1.flsam <-NSH.sam
load(file.path(".","results",assess2,"NSH.RData")  )
fit2.stck  <-NSH
fit2.flsam <-NSH.sam
load(file.path(".","results",assess3,"NSH.RData")  )
fit3.stck  <-NSH
fit3.flsam <-NSH.sam
load(file.path(".","results",assess4,"NSH.RData")  )
fit4.stck  <-NSH
fit4.flsam <-NSH.sam
#plot(residuals_catch)
#logLik(fit1.flsam)
#logLik(fit2)
#1-pchisq(2*(logLik(fit2)-logLik(fit1)),6)
#AIC(fit1)
#AIC(fit2)
#pdf(file.path(output.dir,paste(name(NSH.sam),".pdf",sep="")))
#png(file.path(output.dir,paste(name(NSH.sam),"figures - %02d.png")),units = "px", height=800,width=672, bg = "white")
windows()
#compare stock trajectories
st.names <- c(assess1,assess2,assess3,assess4)
stc <- FLStocks(fit1.stck,fit2.stck, fit3.stck, fit4.stck)
names(stc) <- st.names
flsam <- FLSAMs(fit1.flsam,fit2.flsam, fit3.flsam, fit4.flsam)
names(flsam) <- st.names
plot(stc)
savePlot(file.path(".","results",assess2,"comparison of stock trajectories.png"),type="png")
##
#  script to compare the output of the assessment using the new Fprop and the 2017 assessment
rm(list=ls()); graphics.off(); start.time <- proc.time()[3]
options(stringsAsFactors=FALSE)
# choose the assessments to be compared
assess1 <- "0_basecase"
assess2 <- "2_newM"
assess3 <- "2c_newM_scaled_profile"
assess4 <- "2e_oldM_scaled"
# local path
path <- "D:/git/wg_HAWG/NSAS/benchmark/"
try(setwd(path),silent=TRUE)
### ======================================================================================================
### Define parameters and paths for use in the assessment code
### ======================================================================================================
output.dir          <-  file.path(".","results/")                #figures directory
output.base         <-  file.path(output.dir,"NSH Assessment")  #Output base filename, including directory. Other output filenames are built by appending onto this one
### ============================================================================
### imports
### ============================================================================
library(FLSAM); library(FLEDA)  ; library(ggplot2)
data_series <- "catch unique"
load(file.path(".","results",assess1,"NSH.RData")  )
fit1.stck  <-NSH
fit1.flsam <-NSH.sam
load(file.path(".","results",assess2,"NSH.RData")  )
fit2.stck  <-NSH
fit2.flsam <-NSH.sam
load(file.path(".","results",assess3,"NSH.RData")  )
fit3.stck  <-NSH
fit3.flsam <-NSH.sam
load(file.path(".","results",assess4,"NSH.RData")  )
fit4.stck  <-NSH
fit4.flsam <-NSH.sam
#plot(residuals_catch)
#logLik(fit1.flsam)
#logLik(fit2)
#1-pchisq(2*(logLik(fit2)-logLik(fit1)),6)
#AIC(fit1)
#AIC(fit2)
#pdf(file.path(output.dir,paste(name(NSH.sam),".pdf",sep="")))
#png(file.path(output.dir,paste(name(NSH.sam),"figures - %02d.png")),units = "px", height=800,width=672, bg = "white")
windows()
#compare stock trajectories
st.names <- c(assess1,assess2,assess3,assess4)
stc <- FLStocks(fit1.stck,fit2.stck, fit3.stck, fit4.stck)
names(stc) <- st.names
flsam <- FLSAMs(fit1.flsam,fit2.flsam, fit3.flsam, fit4.flsam)
names(flsam) <- st.names
plot(stc)
savePlot(file.path(".","results",assess2,"comparison of stock trajectories.png"),type="png")
assess2
##
#  script to compare the output of the assessment using the new Fprop and the 2017 assessment
rm(list=ls()); graphics.off(); start.time <- proc.time()[3]
options(stringsAsFactors=FALSE)
# choose the assessments to be compared
assess1 <- "0_basecase"
assess2 <- "2_newM"
assess3 <- "2c_newM_scaled_profile"
assess4 <- "2e_oldM_scaled"
# local path
path <- "D:/git/wg_HAWG/NSAS/benchmark/"
try(setwd(path),silent=TRUE)
### ======================================================================================================
### Define parameters and paths for use in the assessment code
### ======================================================================================================
output.dir          <-  file.path(".","results/")                #figures directory
output.base         <-  file.path(output.dir,"NSH Assessment")  #Output base filename, including directory. Other output filenames are built by appending onto this one
### ============================================================================
### imports
### ============================================================================
library(FLSAM); library(FLEDA)  ; library(ggplot2)
data_series <- "catch unique"
load(file.path(".","results",assess1,"NSH.RData")  )
fit1.stck  <-NSH
fit1.flsam <-NSH.sam
load(file.path(".","results",assess2,"NSH.RData")  )
fit2.stck  <-NSH
fit2.flsam <-NSH.sam
load(file.path(".","results",assess3,"NSH.RData")  )
fit3.stck  <-NSH
fit3.flsam <-NSH.sam
load(file.path(".","results",assess4,"NSH.RData")  )
fit4.stck  <-NSH
fit4.flsam <-NSH.sam
#plot(residuals_catch)
#logLik(fit1.flsam)
#logLik(fit2)
#1-pchisq(2*(logLik(fit2)-logLik(fit1)),6)
#AIC(fit1)
#AIC(fit2)
#pdf(file.path(output.dir,paste(name(NSH.sam),".pdf",sep="")))
#png(file.path(output.dir,paste(name(NSH.sam),"figures - %02d.png")),units = "px", height=800,width=672, bg = "white")
windows()
#compare stock trajectories
st.names <- c(assess1,assess2,assess3,assess4)
stc <- FLStocks(fit1.stck,fit2.stck, fit3.stck, fit4.stck)
names(stc) <- st.names
flsam <- FLSAMs(fit1.flsam,fit2.flsam, fit3.flsam, fit4.flsam)
names(flsam) <- st.names
plot(stc)
savePlot(file.path(".","results",assess4,"comparison of stock trajectories.png"),type="png")
library(ggplotFL)
M<-FLQuants(fit1.stck@m,fit2.stck@m, fit3.stck@m, fit4.stck@m)
names(M) <- st.names
ggplot(M , aes (x =year ,y =data  , colour = qname)) + geom_line() + facet_wrap(~age) + scale_colour_discrete(name = "ASSESSMENT")
##
#  script to compare the output of the assessment using the new Fprop and the 2017 assessment
rm(list=ls()); graphics.off(); start.time <- proc.time()[3]
options(stringsAsFactors=FALSE)
# choose the assessments to be compared
assess1 <- "0_basecase"
assess2 <- "2_newM"
assess3 <- "2c_newM_scaled_profile"
assess4 <- "2e_oldM_scaled"
# local path
path <- "D:/git/wg_HAWG/NSAS/benchmark/"
try(setwd(path),silent=TRUE)
### ======================================================================================================
### Define parameters and paths for use in the assessment code
### ======================================================================================================
output.dir          <-  file.path(".","results/")                #figures directory
output.base         <-  file.path(output.dir,"NSH Assessment")  #Output base filename, including directory. Other output filenames are built by appending onto this one
### ============================================================================
### imports
### ============================================================================
library(FLSAM); library(FLEDA)  ; library(ggplot2)
data_series <- "catch unique"
load(file.path(".","results",assess1,"NSH.RData")  )
fit1.stck  <-NSH
fit1.flsam <-NSH.sam
load(file.path(".","results",assess2,"NSH.RData")  )
fit2.stck  <-NSH
fit2.flsam <-NSH.sam
load(file.path(".","results",assess3,"NSH.RData")  )
fit3.stck  <-NSH
fit3.flsam <-NSH.sam
load(file.path(".","results",assess4,"NSH.RData")  )
fit4.stck  <-NSH
fit4.flsam <-NSH.sam
windows()
library(ggplotFL)
M<-FLQuants(fit1.stck@m,fit2.stck@m, fit3.stck@m, fit4.stck@m)
names(M) <- st.names
ggplot(M , aes (x =year ,y =data  , colour = qname)) + geom_line() + facet_wrap(~age) + scale_colour_discrete(name = "ASSESSMENT")
savePlot(file.path(".","results",assess2,"comparison of M.png"),type="png")
st.names <- c(assess1,assess2,assess3,assess4)
library(ggplotFL)
M<-FLQuants(fit1.stck@m,fit2.stck@m, fit3.stck@m, fit4.stck@m)
names(M) <- st.names
ggplot(M , aes (x =year ,y =data  , colour = qname)) + geom_line() + facet_wrap(~age) + scale_colour_discrete(name = "ASSESSMENT")
savePlot(file.path(".","results",assess2,"comparison of M.png"),type="png")
savePlot(file.path(".","results",assess4,"comparison of M.png"),type="png")
